document.addEventListener("DOMContentLoaded",()=>{let t=(t,e,o)=>({map:null,tile:null,marker:null,drawItems:null,createMap:function(a){let i=this;if(this.map=L.map(a,e.controls),this.map.on("load",()=>{setTimeout(()=>this.map.invalidateSize(!0),0),e.showMarker&&this.marker.setLatLng(this.map.getCenter())}),e.draggable||this.map.dragging.disable(),this.tile=L.tileLayer(e.tilesUrl,{attribution:e.attribution,minZoom:e.minZoom,maxZoom:e.maxZoom,tileSize:e.tileSize,zoomOffset:e.zoomOffset,detectRetina:e.detectRetina}).addTo(this.map),e.showMarker){let n=e.markerColor||"#3b82f6",r=L.divIcon({html:`<svg xmlns="http://www.w3.org/2000/svg" class="map-icon" fill="${n}" width="36" height="36" viewBox="0 0 24 24"><path d="M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 11c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z"/></svg>`,className:"",iconSize:[36,36],iconAnchor:[18,36]});this.marker=L.marker([0,0],{icon:r,draggable:!1,autoPan:!0}).addTo(this.map),this.map.on("move",()=>this.marker.setLatLng(this.map.getCenter()))}this.map.on("movestart",()=>setTimeout(()=>{t.set("moving",!0)},100)),this.map.on("moveend",()=>setTimeout(()=>{t.set("moving",!1)},500)),this.map.on("moveend",()=>setTimeout(()=>this.updateLocation(),500)),this.map.on("locationfound",function(){i.map.setZoom(e.controls.zoom)});let s=o??this.getCoordinates();if(s.lat||s.lng?this.map.setView(new L.LatLng(s.lat,s.lng)):this.map.locate({setView:!0,maxZoom:e.controls.maxZoom,enableHighAccuracy:!0,watch:!1}),e.showMyLocationButton&&this.addLocationButton(),e.liveLocation.send&&e.liveLocation.realtime&&setInterval(()=>{this.fetchCurrentLocation()},e.liveLocation.miliseconds),e.geoMan.show){this.map.pm.addControls({position:e.geoMan.position,drawCircleMarker:e.geoMan.drawCircleMarker,rotateMode:e.geoMan.rotateMode,drawMarker:e.geoMan.drawMarker,drawPolygon:e.geoMan.drawPolygon,drawPolyline:e.geoMan.drawPolyline,drawCircle:e.geoMan.drawCircle,editMode:e.geoMan.editMode,dragMode:e.geoMan.dragMode,cutPolygon:e.geoMan.cutPolygon,editPolygon:e.geoMan.editPolygon,deleteLayer:e.geoMan.deleteLayer}),this.drawItems=new L.FeatureGroup().addTo(this.map),this.map.on("pm:create",t=>{t.layer&&t.layer.pm&&(t.layer.pm.enable(),this.drawItems.addLayer(t.layer),this.updateGeoJson())}),this.map.on("pm:edit",()=>{this.updateGeoJson()}),this.map.on("pm:remove",t=>{try{this.drawItems.removeLayer(t.layer),this.updateGeoJson()}catch(e){console.error("Error during removal of layer:",e)}});let l=this.getGeoJson();l&&(this.drawItems=L.geoJSON(l,{pointToLayer:(t,e)=>L.circleMarker(e,{radius:15,color:"#3388ff",fillColor:"#3388ff",fillOpacity:.6}),style:function(t){if("Polygon"===t.geometry.type)return{color:e.geoMan.color||"#3388ff",fillColor:e.geoMan.filledColor||"blue",weight:2,fillOpacity:.4}},onEachFeature:(t,o)=>{"Polygon"===t.geometry.type?o.bindPopup("Polygon Area"):"Point"===t.geometry.type&&o.bindPopup("Point Location"),e.geoMan.editable&&("Polygon"===t.geometry.type?o.pm.enable({allowSelfIntersection:!1}):"Point"===t.geometry.type&&o.pm.enable({draggable:!0})),o.on("pm:edit",()=>{this.updateGeoJson()})}}).addTo(this.map),e.geoMan.editable&&this.drawItems.eachLayer(t=>{t.pm.enable({allowSelfIntersection:!1})}),this.map.fitBounds(this.drawItems.getBounds()))}},updateGeoJson:function(){try{let o=this.drawItems.toGeoJSON();if("object"!=typeof o){console.error("GeoJSON data is not an object:",o);return}t.set(e.statePath,{...t.get(e.statePath),geojson:o},!0)}catch(a){console.error("Error updating GeoJSON:",a)}},getGeoJson:function(){let o=t.get(e.statePath)??{};return o.geojson},updateLocation:function(){let o=this.getCoordinates(),a=this.map.getCenter();(o.lng!==a.lng||o.lat!==a.lat)&&(t.set(e.statePath,{...t.get(e.statePath),lat:a.lat,lng:a.lng},!1),e.liveLocation.send&&t.$refresh())},removeMap:function(t){this.marker&&(this.marker.remove(),this.marker=null),this.tile.remove(),this.tile=null,this.map.off(),this.map.remove(),this.map=null},getCoordinates:function(){let o=t.get(e.statePath)??{},a=o.hasOwnProperty("lat")&&o.hasOwnProperty("lng")&&null!==o.lat&&null!==o.lng;return a||(o={lat:e.default.lat,lng:e.default.lng}),o},attach:function(t){this.createMap(t);let e=new IntersectionObserver(e=>{e.forEach(e=>{e.intersectionRatio>0?this.map||this.createMap(t):this.removeMap(t)})},{root:null,rootMargin:"0px",threshold:1});e.observe(t)},fetchCurrentLocation:function(){"geolocation"in navigator?navigator.geolocation.getCurrentPosition(async t=>{let e=new L.LatLng(t.coords.latitude,t.coords.longitude);await this.map.flyTo(e),this.updateLocation(),this.updateMarker()},t=>{console.error("Error fetching current location:",t)}):alert("Geolocation is not supported by this browser.")},addLocationButton:function(){let t=document.createElement("button");t.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="currentColor" d="M12 0C8.25 0 5 3.25 5 7c0 5.25 7 13 7 13s7-7.75 7-13c0-3.75-3.25-7-7-7zm0 10c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm0-5c-1.11 0-2 .89-2 2s.89 2 2 2 2-.89 2-2-.89-2-2-2z"/></svg>',t.type="button",t.classList.add("map-location-button"),t.onclick=()=>this.fetchCurrentLocation(),this.map.getContainer().appendChild(t)},init:function(){this.$wire=t,this.config=e,this.state=o,t.on("refreshMap",this.refreshMap.bind(this))},updateMarker:function(){e.showMarker&&(this.marker.setLatLng(this.getCoordinates()),setTimeout(()=>this.updateLocation(),500))},refreshMap:function(){this.map.flyTo(this.getCoordinates()),this.updateMarker()}});window.mapPicker=t,window.dispatchEvent(new CustomEvent("map-script-loaded"))});